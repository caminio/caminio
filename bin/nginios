#!/usr/bin/env node

/*
 * nginios
 * (c) 2014 by TASTENWERK
 * license: GPLv3
 *
 */

var program = require('commander');
var prompt = require('prompt');
var colors = require('colors');
var fs = require('fs');
var child_process = require("child_process");
var nginios = require(__dirname+'/../');

program
  .version('0.0.1')
  .usage('new <app_name>')
  .option('new [name]', 'Create a new nginios application' )
  .on('new', function( name ){
      child_process.exec( 'express '+name, function( err, stderr, stdout ){
        fs.mkdirSync( name+'/config' );
        console.log((name+'/app').green);
        console.log((name+'/lib').green);
        console.log((name+'/config').green);
        console.log((name+'/public').green);
        fs.mkdirSync( name+'/config/environments' );
        fs.unlink( name+'/app.js' );
        fs.createReadStream(__dirname+'/../lib/install/app.js').pipe(fs.createWriteStream(name+'/app.js'));
        fs.createReadStream(__dirname+'/../lib/install/environments/development.js').pipe(fs.createWriteStream(name+'/config/environments/development.js'));
        fs.createReadStream(__dirname+'/../lib/install/environments/production.js').pipe(fs.createWriteStream(name+'/config/environments/production.js'));
        fs.createReadStream(__dirname+'/../lib/install/environments/test.js').pipe(fs.createWriteStream(name+'/config/environments/production.js'));
        fs.createReadStream(__dirname+'/../lib/install/routes.js').pipe(fs.createWriteStream(name+'/config/routes.js'));
        fs.createReadStream(__dirname+'/../lib/install/package.json').pipe(fs.createWriteStream(name+'/package.json'));
        console.log('application', name.bold, 'created successfully'.green);
        });
      });

  program
  .usage('gear <name>')
  .option('gear [name]', 'Create a plain nginios gear folder' )
  .on('gear', function( name ){
      fs.mkdirSync( name );
      fs.createReadStream(__dirname+'/../lib/install/gear/package.json').pipe(fs.createWriteStream(name+'/package.json'));
      fs.createReadStream(__dirname+'/../lib/install/gear/index.js').pipe(fs.createWriteStream(name+'/index.js'));
      fs.createReadStream(__dirname+'/../lib/install/gear/Makefile').pipe(fs.createWriteStream(name+'/Makefile'));
      console.log('your gear', name.bold, 'is ready to use!'.green);
      });

  program
  .option('adduser [name] [domain]', 'add a user to a domain' )
  .usage('adduser kings.com henry')
  .on('adduser', function( name, domainName ){
    prompt.start();

    prompt.get([
      { 
        name: 'email',
        required: true
      },
      {
        name: 'password',
        hidden: true
      }
      ], function( err, result ){
        var app = nginios();
        nginios.orm.models.Domain.find({ name: domainName }, function(err, domain){
          if( err ){ console.log(err); }
          if( domain )
          return createUser( domain, name, result.email, result.password );

          nginios.orm.models.Domain.create({ name: domainName }, function(err, domain){
            createUser( domain, name, result.email, result.password );
            });
          });
    });
  });

function createUser( domain, name, email, password ){

  nginios.orm.models.User.create({ 
    name: { full: name }, 
    email: email,
    password: password,
    domains: [ domain ] }, function( err, user ){
      if( err ){ return console.log(err); }
      console.log('User', name.bold, ' has been created'.green);
  });

}

program.parse(process.argv);
